/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"canvas\");\n  canvasEl.height = 450;\n  canvasEl.width = 700;\n  const ctx = canvasEl.getContext(\"2d\");\n  ctx.fillStyle = \"grey\";\n  ctx.fillRect(0, 0, 700, 450);\n  const video = document.getElementById(\"video\");\n  const game = new _scripts_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx, video);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFNO0VBQ2hELE1BQU1DLFFBQVEsR0FBR0YsUUFBUSxDQUFDRyxjQUFULENBQXdCLFFBQXhCLENBQWpCO0VBQ0FELFFBQVEsQ0FBQ0UsTUFBVCxHQUFrQixHQUFsQjtFQUNBRixRQUFRLENBQUNHLEtBQVQsR0FBaUIsR0FBakI7RUFDQSxNQUFNQyxHQUFHLEdBQUdKLFFBQVEsQ0FBQ0ssVUFBVCxDQUFvQixJQUFwQixDQUFaO0VBQ0FELEdBQUcsQ0FBQ0UsU0FBSixHQUFnQixNQUFoQjtFQUNBRixHQUFHLENBQUNHLFFBQUosQ0FBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLEdBQW5CLEVBQXdCLEdBQXhCO0VBRUEsTUFBTUMsS0FBSyxHQUFHVixRQUFRLENBQUNHLGNBQVQsQ0FBd0IsT0FBeEIsQ0FBZDtFQUNBLE1BQU1RLElBQUksR0FBRyxJQUFJWixxREFBSixDQUFTTyxHQUFULEVBQWNJLEtBQWQsQ0FBYjtBQUNILENBVkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GQUNFTUFOLVJldmFtcGVkLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWUgZnJvbSBcIi4vc2NyaXB0cy9nYW1lXCJcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcclxuICAgIGNvbnN0IGNhbnZhc0VsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICBjYW52YXNFbC5oZWlnaHQgPSA0NTA7XHJcbiAgICBjYW52YXNFbC53aWR0aCA9IDcwMDtcclxuICAgIGNvbnN0IGN0eCA9IGNhbnZhc0VsLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgIGN0eC5maWxsU3R5bGUgPSBcImdyZXlcIjtcclxuICAgIGN0eC5maWxsUmVjdCgwLCAwLCA3MDAsIDQ1MCk7XHJcblxyXG4gICAgY29uc3QgdmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvXCIpO1xyXG4gICAgY29uc3QgZ2FtZSA9IG5ldyBHYW1lKGN0eCwgdmlkZW8pO1xyXG59KSJdLCJuYW1lcyI6WyJHYW1lIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzRWwiLCJnZXRFbGVtZW50QnlJZCIsImhlaWdodCIsIndpZHRoIiwiY3R4IiwiZ2V0Q29udGV4dCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwidmlkZW8iLCJnYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Game {\n  constructor(ctx, video) {\n    this.video = video;\n    this.ctx = ctx;\n    this.mode = \"gameon\";\n    this.model;\n    this.face;\n    this.DIM_width = 700;\n    this.DIM_height = 450; // Checks to see if game is playing to set up camera and load face models\n\n    if (this.mode === \"gameon\") {\n      this.setupCamera();\n      this.loadFaceModel(); // Sets interval to loop the draw function (which loses context)\n      // setInterval(this.draw.bind(this), 20);\n\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  setupCamera() {\n    // Using the mediaDevices API to grab the video\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        width: this.DIM_width,\n        height: this.DIM_height\n      },\n      audio: false\n    }).then(stream => {\n      // Which returns us a promise which we then take the stream and set that to the video srcObject\n      this.video.srcObject = stream;\n    });\n  }\n\n  loadFaceModel() {\n    // Waiting for the video to have a stream from the setupCamera function\n    this.video.addEventListener(\"loadeddata\", async () => {\n      // Then load up the face detection API\n      this.model = await faceLandmarksDetection.load(faceLandmarksDetection.SupportedPackages.mediapipeFacemesh);\n    });\n  }\n\n  async detectFace() {\n    // Here we grab the model we waited from the API for and grab its preditions\n    // from estimateFaces function passing in the video element in order to detect those faces\n    const facePredictions = await this.model.estimateFaces({\n      input: this.video\n    }); // Below are errors to restrict user\n\n    if (facePredictions.length === 0) {\n      this.face = undefined;\n      console.log(\"Error: No face detected\");\n    } else if (facePredictions.length > 1) {\n      this.face = undefined;\n      console.log(\"Error: This app is designed for 1 person at a time\");\n    } else {\n      // Set the face instance variable to the first face prediction\n      this.face = facePredictions[0];\n    }\n  }\n\n  animate() {\n    this.draw();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  scaleCoord(pt) {\n    let x = pt[0];\n    let y = pt[1];\n    let z = pt[2];\n    return [x, y]; // debugger\n    // let x = map(pt[0], 0,video.width, 0,width);\n    // let y = map(pt[1], 0,video.height, 0,height);\n    // return createVector(x, y);\n  } // getPixelMatrix(imgData) {\n  //     const mat = new Array(imgData.height);\n  //     for (let i = 0; i < imgData.height; i++) {\n  //         mat[i] = new Array(imgData.weight);\n  //     }\n  //     for (let i = 0; i < imgData.data.length; i+=4) {\n  //         const pixelColor = {\n  //             r: imgData.data[i+0],\n  //             g: imgData.data[i+1],\n  //             b: imgData.data[i+2],\n  //             a: imgData.data[i+3]\n  //         }\n  //         const pixelIdx = i/4;\n  //         const x = pixelIdx%imgData.width;\n  //         const y = Math.floor(pixelIdx/imgData.width);\n  //         mat[y][x] = pixelColor\n  //     }\n  //     return mat;\n  // }\n  // Load face models predictions before drawing which happens in the detectFace function\n\n\n  draw() {\n    // This is so that we don't error out before out video loads up\n    if (this.model !== undefined) {\n      this.detectFace();\n      this.ctx.drawImage(this.video, 0, 0, this.DIM_width, this.DIM_height); // console.log(this.face)\n      // debugger\n    } // Logic for error handling when face is too far or too close\n\n\n    if (this.face !== undefined) {\n      if (this.face.boundingBox.bottomRight[0] - this.face.boundingBox.topLeft[0] - 40 < 100 || this.face.boundingBox.bottomRight[1] - this.face.boundingBox.topLeft[1] + 110 < 175) {\n        console.log(\"Error: Bring your face closer and keep it straight\");\n      } else if (this.face.boundingBox.bottomRight[0] - this.face.boundingBox.topLeft[0] - 40 > 300 || this.face.boundingBox.bottomRight[1] - this.face.boundingBox.topLeft[1] + 110 > 375) {\n        console.log(\"Error: Back up a bit and keep your head straight\");\n      }\n    } // When filters are clicked, they are revealed here\n    // My attempt to distort the face\n    // const sadFace = true\n    // if (sadFace && this.face !== undefined) {\n    //     for (let i = 0; i < this.face.annotations.lipsLowerOuter.length; i++) {\n    //         // I manipulated the face object from the API but it doesn't correlate to the video or canvas\n    //         // Instead of just subtracting two points, I probably need to do some math to figure out\n    //         // how to distort a section of the face\n    //         this.face.annotations.lipsLowerOuter[i][0] -= 50;\n    //         this.face.annotations.lipsLowerOuter[i][1] -= 50;\n    //         // I could do one of two things:\n    //         // Manipulate the video before I draw the ctx\n    //         // or manipulate the ctx after I drew it\n    //         // Method 2 attempt\n    //         this.ctx.drawImage(this.video, 0, 0, this.DIM_width, this.DIM_height);\n    //         const imgData = this.ctx.getImageData(0,0,this.DIM_width, this.DIM_height)\n    //         console.log(imgData)\n    //         const mat = this.getPixelMatrix(imgData);\n    //         console.log(mat)\n    //         // Cool, now I can manipulate the ctx data points and draw it again\n    //     }\n    // }\n\n\n    const faceMaskDots = true;\n\n    if (faceMaskDots && this.face !== undefined) {\n      // Making blue mask around face\n      this.ctx.strokeStyle = 'rgba(0, 150, 255, 0.5)';\n      this.ctx.beginPath();\n      let startpt = this.face.annotations.silhouette[0];\n      startpt = this.scaleCoord(startpt);\n\n      for (let pt of this.face.annotations.silhouette) {\n        pt = this.scaleCoord(pt);\n        this.ctx.lineTo(...pt);\n      } // This is to close the shape\n\n\n      this.ctx.lineTo(...startpt);\n      this.ctx.fillStyle = 'rgba(0, 150, 255, 0.3)';\n      this.ctx.fill();\n      this.ctx.stroke(); // Making face dots for each facial feature\n\n      for (let pt of this.face.scaledMesh) {\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"black\";\n        pt = this.scaleCoord(pt);\n        let x = pt[0];\n        let y = pt[1];\n        this.ctx.arc(x, y, 0.5, 0, 2 * Math.PI);\n        this.ctx.fillStyle = \"black\";\n        this.ctx.fill();\n        this.ctx.stroke();\n      }\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GQUNFTUFOLVJldmFtcGVkLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;